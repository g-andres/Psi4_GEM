store = {}
#test_psivars = ['scf total energy', 'mp2 singles energy', 'mp2 opposite-spin energy', 'mp2 same-spin energy', 'mp2 correlation energy', 'mp2 total energy', 'mp3 correlation energy', 'mp3 total energy', 'mp4 total energy', 'mp4 correlation energy', 'current energy', 'current correlation energy', 'current reference energy', 'mp4(sdq) correlation energy', 'mp4(sdq) total energy', 'mp4(t) correction energy']
test_psivars = ['nuclear repulsion energy', 'scf total energy', 'mp2 singles energy', 'mp2 correlation energy', 'mp2 total energy', 'mp3 correlation energy', 'mp3 total energy', 'current energy', 'current correlation energy', 'current reference energy']

print '    <<<  RHF  >>>'

cfour {
MP3 single-point energy calculation
O
H 1 R
H 1 R 2 A

R=0.958
A=104.5

*ACES2(CALC=MP3,BASIS=AUG-PVDZ
SCF_CONV=12
MEMORY=20000000)
}

energy('cfour')
print_variables()
clean()

for vari in test_psivars:
    store[vari] = get_variable(vari)
    set_variable(vari, 0.0)
    #print(store[vari], get_variable(vari))
    #print get_variable(vari)

molecule h2o {
O
H 1 R
H 1 R 2 A

R=0.958
A=104.5
}

set basis aug-cc-pvdz
set e_convergence 10
#set mp2_type conv

energy('mp3')
print_variables()
clean()

for vari in test_psivars:
    if vari == 'nuclear repulsion energy':
        compare_values(store[vari], get_variable(vari), 4, vari.upper())
    else:
        compare_values(store[vari], get_variable(vari), 6, vari.upper())


print '    <<<  UHF  >>>'

cfour {
ROHF-MP3 energy calculation 
N
H 1 R
H 1 R 2 A

R=1.008
A=105.0

*ACES2(CALC=MP3,BASIS=AUG-PVDZ
MULT=2,REF=UHF
OCCUPATION=3-1-1-0/3-0-1-0
SCF_CONV=12
CC_CONV=12
MEMORY=20000000)
}

energy('cfour')

for vari in test_psivars:
    store[vari] = get_variable(vari)
    set_variable(vari, 0.0)

molecule nh2 {
N
H 1 R
H 1 R 2 A

R=1.008
A=105.0
}

set basis aug-cc-pvdz
set reference uhf
set docc [3, 0, 0, 1]
set socc [0, 0, 1, 0]  #OCCUPATION=3-1-1-0/3-0-1-0



energy('mp3')
print_variables()
clean()

for vari in test_psivars:
    if vari == 'nuclear repulsion energy':
        compare_values(store[vari], get_variable(vari), 4, vari.upper())
    else:
        compare_values(store[vari], get_variable(vari), 6, vari.upper())


#print '    <<<  ROHF  >>>'
#N
#H 1 R
#H 1 R 2 A

#R=1.008
#A=105.0

#cfour {
#ROHF-MP3 energy calculation
#H 0.0 0.0 0.0
#H 1.0 0.0 0.0
#H 0.5 0.7 0.0
#
#*ACES2(CALC=MP3,BASIS=PVDZ
#MULT=2,REF=ROHF
#SCF_CONV=12
#CC_CONV=12
#MEMORY=20000000)
#
#}
#
#energy('cfour')

#for vari in test_psivars:
#    store[vari] = get_variable(vari)
#    set_variable(vari, 0.0)
#
#molecule li {
#H 0.0 0.0 0.0
#H 1.0 0.0 0.0
#H 0.5 0.7 0.0
#}
#
#set basis cc-pvdz
#set reference rohf
#
#energy('mp3')
#print_variables()
#clean()
#
#for vari in test_psivars:
#    compare_values(store[vari], get_variable(vari), 6, vari.upper())

